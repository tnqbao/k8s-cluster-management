{{- if .Values.database.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
  namespace: {{ .Values.global.namespace }}
  labels:
    app: postgres-service
    {{- include "bao-application.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-service
  template:
    metadata:
      labels:
        app: postgres-service
    spec:
      containers:
        - name: postgres
          image: {{ .Values.database.postgres.image.repository }}:{{ .Values.database.postgres.image.tag }}
          imagePullPolicy: {{ .Values.database.postgres.image.pullPolicy }}
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_INITDB_ARGS
              value: "--auth=trust"
            - name: POSTGRES_DB
              value: {{ .Values.database.postgres.auth.database | quote }}
            - name: POSTGRES_USER
              value: {{ .Values.database.postgres.auth.username | quote }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.database.postgres.auth.postgresPassword | quote }}
            - name: DEPLOY_ENV
              value: {{ .Values.environment | quote }}
          resources:
            {{- toYaml .Values.database.postgres.resources | nindent 12 }}
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-data
          {{- if .Values.database.postgres.persistence.enabled }}
          persistentVolumeClaim:
            claimName: postgres-pvc
          {{- else }}
          emptyDir: {}
          {{- end }}

---
{{- if .Values.database.pgpool.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgpool-deployment
  namespace: {{ .Values.global.namespace }}
  labels:
    app: pgpool-service
    {{- include "bao-application.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.database.pgpool.replicaCount }}
  selector:
    matchLabels:
      app: pgpool-service
  template:
    metadata:
      labels:
        app: pgpool-service
    spec:
      containers:
        - name: pgpool
          image: {{ .Values.database.pgpool.image.repository }}:{{ .Values.database.pgpool.image.tag }}
          ports:
            - containerPort: 5432
          env:
            # Pgpool Backend Configuration
            - name: PGPOOL_BACKEND_NODES
              value: {{ .Values.database.pgpool.backendNodes | default (printf "0:postgres-service.%s.svc.cluster.local:5432" .Values.global.namespace) | quote }}
            # Admin User Configuration
            - name: PGPOOL_ADMIN_USERNAME
              value: {{ .Values.database.postgres.auth.username | quote }}
            - name: PGPOOL_ADMIN_PASSWORD
              value: {{ .Values.database.postgres.auth.postgresPassword | quote }}
            # Health Check Configuration
            - name: PGPOOL_HEALTH_CHECK_USER
              value: {{ .Values.database.postgres.auth.username | quote }}
            - name: PGPOOL_HEALTH_CHECK_PASSWORD
              value: {{ .Values.database.postgres.auth.postgresPassword | quote }}
            # Streaming Replication Check
            - name: PGPOOL_SR_CHECK_USER
              value: {{ .Values.database.postgres.auth.username | quote }}
            - name: PGPOOL_SR_CHECK_PASSWORD
              value: {{ .Values.database.postgres.auth.postgresPassword | quote }}
            # Postgres Authentication
            - name: PGPOOL_POSTGRES_USERNAME
              value: {{ .Values.database.postgres.auth.username | quote }}
            - name: PGPOOL_POSTGRES_PASSWORD
              value: {{ .Values.database.postgres.auth.postgresPassword | quote }}
            # Environment
            - name: DEPLOY_ENV
              value: {{ .Values.environment | quote }}
{{- end }}
{{- end }}
