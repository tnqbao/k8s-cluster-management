{{- if and .Values.grafana.enabled .Values.grafana.ingress.enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana-ingress
  namespace: {{ .Values.global.namespace }}
  labels:
    app: grafana-otel-lgtm-service
    {{- include "bao-application.labels" . | nindent 4 }}
  {{- with .Values.grafana.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if .Values.grafana.ingress.className }}
  ingressClassName: {{ .Values.grafana.ingress.className }}
  {{- end }}
  rules:
    {{- range .Values.grafana.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            pathType: {{ .pathType }}
            backend:
              service:
                name: grafana-service
                port:
                  number: {{ $.Values.grafana.service.ports.grafana }}
          {{- end }}
    {{- end }}
{{- end }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
  namespace: {{ .Values.global.namespace }}
  labels:
    app: grafana-otel-lgtm-service
    {{- include "bao-application.labels" . | nindent 4 }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.grafana.persistence.size }}
  {{- if .Values.global.storageClass }}
  storageClassName: {{ .Values.global.storageClass }}
  {{- end }}
{{- end }}

